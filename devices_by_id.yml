---
  - name: "Playbook for collecting disks information"
    hosts: localhost
    connection: local
    vars:
      device_by_id_path: "/host/dev/disk/by-id"
      file_tmp: "./file_tmp"
      config_yaml: "./local-storage-block.yaml"
    tasks:
    - name: "Collect OCS workers"
      shell: |
        oc get nodes -l cluster.ocs.openshift.io/openshift-storage= -o jsonpath='{range .items[*]}{@.metadata.name}{"\n"}'
      register: workers

    - name: "Collect device by-id"
      shell: |
        oc debug node/{{ item }} -- ls -l {{ device_by_id_path }}  | egrep -v "^total|dm-" | sed -e 's/ -> / /g ; s/..\/..\///g' | awk -v hostname="{{ item }}" -F ' ' '{ print hostname,$NF,"/dev/disk/by-id/"$(NF-1)}' | sort -u -k2,2 >> {{ file_tmp }}
      loop: "{{ workers.stdout_lines }}"

    - name: "Collect device by-id and size"
      shell:
        cmd: |
          cat > {{ config_yaml }} << EOF
          apiVersion: local.storage.openshift.io/v1
          kind: LocalVolume
          metadata:
            name: local-block
            namespace: local-storage
          spec:
            nodeSelector:
              nodeSelectorTerms:
              - matchExpressions:
                  - key: cluster.ocs.openshift.io/openshift-storage
                    operator: In
                    values:
                    - ""
            storageClassDevices:
              - storageClassName: localblock
                volumeMode: Block
                devicePaths:
          EOF
      args:
        executable: /bin/bash

    - name: "Collect device by-id and size"
      shell: |
        cat {{ file_tmp }} | while read line; do
              hostname=$(echo $line | cut -d ' ' -f1)
              device=$(echo $line | cut -d ' ' -f2)
              device_byid=$(echo $line | cut -d ' ' -f3)
              size=$(oc debug node/$hostname -- lsblk -n -o SIZE /dev/$device)
              echo -e "        - $device_byid # $hostname \t $device \t $size" >> {{ config_yaml }}
            done

    - debug: msg="Following the devices available:\n\n{{ lookup('file', '{{ config_yaml }}') }}"

    - name: Clean tmp file
      file:
        path: "{{ file_tmp }}"
        state: absent
